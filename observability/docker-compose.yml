version: "3.8"

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./telemetry/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: always
    networks:
      - airbyte_airbyte_public
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      #- ./grafana.ini:/etc/grafana/grafana.ini
      #- ./telemetry/grafana/notifiers:/etc/grafana/provisioning/notifiers
      - ./telemetry/grafana/alerting:/etc/grafana/provisioning/alerting
      - grafana_data:/var/lib/grafana
      - ./telemetry/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./telemetry/grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./telemetry/grafana/dashboards:/var/lib/grafana/dashboards
    restart: always
    environment:
       #- GF_AUTH_ANONYMOUS_ENABLED=true
       #- GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
       #- GF_AUTH_DISABLE_LOGIN_FORM=true
       #- GF_USERS_DEFAULT_THEME=light
       - DS_PROMETHEUS=DS_PROMETHEUS
    ports:
      - "3000:3000"
    networks:
      - airbyte_airbyte_public  
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: always
    networks:
      - airbyte_airbyte_public
    ports:
      - "8080:8080"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    restart: always
    networks:
      - airbyte_airbyte_public
    command:
      - "--path.procfs=/host/proc"
      - '--path.rootfs=/rootfs'
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"

  vector:
    image: "timberio/vector:latest-debian"
    container_name: vector
    restart: always
    environment: 
     - DOCKER_HOST="unix:///var/run/docker.sock"
    ports: 
     - '8686:8686'
    volumes:
     - ./telemetry/vector/vector.toml:/etc/vector/vector.toml:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - airbyte_airbyte_public
    extra_hosts:
      - "host.docker.internal:host-gateway"

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: always
    ports:
     - 3100:3100
    volumes:
     - ./telemetry/loki/loki-conf.yaml:/etc/loki/loki-conf.yaml
    networks:
     - airbyte_airbyte_public

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    restart: always
    ports:
     - 9115:9115
    command:
     - --config.file=/etc/blackbox/blackbox.yml
    networks:
     - airbyte_airbyte_public
    extra_hosts:
     - "host.docker.internal:host-gateway"
    volumes:
     - ./telemetry/blackbox/blackbox.yml:/etc/blackbox/blackbox.yml

  rundeck:
    image: rundeck/rundeck:4.13.0
    container_name: rundeck
    privileged: true
    pid: host
    #stdin_open: true
    #tty: true
    ports:
      - 4440:4440
    extra_hosts:
      - "host.docker.internal:host-gateway"
    #environment:
      #- RUNDECK_SERVER_FORWARDED=true
      #- RUNDECK_GRAILS_URL=http://$(curl ifconfig.me):4440
    volumes:
     #- ./telemetry/rundeck/framework.properties:/home/rundeck/etc/framework.properties
     #- ./telemetry/rundeck/rundeck-config.properties:/home/rundeck/server/config/rundeck-config.properties
     - ./telemetry/scripts/start.sh:/tmp/start.sh
     - /proc:/host/proc
     - /var/run/docker.sock:/var/run/docker.sock
     - rundeck_data:/home/rundeck/server/data
     - ./telemetry/rundeck/rd.sh:/tmp/rd.sh
     #- ./telemetry/scripts/entry.sh:/home/rundeck/docker-lib/entry.sh
     - ./telemetry/rundeck/MyProject-20230608-092457.rdproject.jar:/tmp/MyProject-20230608-092457.rdproject.jar
    networks:
     - airbyte_airbyte_public
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '0.5'
    #      memory: 512M

volumes:
  grafana_data:
  rundeck_data: 
networks:
  airbyte_airbyte_public:
    external: true
